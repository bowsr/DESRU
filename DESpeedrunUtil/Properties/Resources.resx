<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Windows.Forms" name="System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" />
  <data name="DESRU" type="System.Resources.ResXFileRef, System.Windows.Forms">
    <value>..\Resources\DESRU.ico;System.Drawing.Icon, System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a</value>
  </data>
  <data name="HelpPage_InfoPanel" xml:space="preserve">
    <value>The Info Panel will show you the status of DOOM Eternal and DESRU.

Starting from the top, this panel will show you what version of DOOM Eternal is currently running.
Your current FPS limit will be displayed below that.

The status of the Freescroll Emulation Macro will also be shown. As a note, you'll see this toggle between Running and Stopped if you tab out of the game.

If dynamic resolution scaling is enabled, this panel will display that, along with the current FPS target.
It will also display if hotkeys are enabled. Like the macro, you'll see this toggle when tabbing out of DOOM.

The Slopeboosting info shows whether pm_allowRampJumping is set to 0 or 1. This only applies to version 1.0 (Release), as any non-unrestricted category does not allow slopeboosting.
In order to disable slopeboosting, you'll need to enable the option in your LiveSplit autosplitter settings.

Balance Updates refers to the firewall rule. This must say "Blocked" when speedrunning.
Cheats shows the status of the meath00k dll.

ReShade displays whether ReShade is detected to be running over Vulkan.</value>
  </data>
  <data name="HelpPage_Keybinds" xml:space="preserve">
    <value>In the top left of the main DESRU window, you'll find a section where you can bind various actions to keys.

In order to bind an action to a key, click the box next to the label of your desired action, then press a key or mouse button that you wish to bind that action to.
Most keys can be bound, with notable exceptions being the ESCAPE and Tilde keys, and the Left and Right mouse buttons.

For the FPS Hotkey actions, you can also specify what FPS limit you want to toggle with that key. This limit can be anywhere from 1 FPS to 250 FPS.
Every hotkey can also be used to toggle back to your set max FPS by pressing it again.

If you need more Hotkeys, you can click the button at the bottom of this section labeled "Show More Hotkeys." This will expand the window at the bottom, revealing 12 more bindable FPS limit toggles, as well as some Resolution Scaling Hotkeys.
These Res. Scale Hotkeys will change the minimum resolution percentage to your desired value. Pressing the same key again will change it back to the default value set in the Resolution Scaling section of DESRU.


Like the macro, hotkeys will be disabled when DOOM Eternal is not in focus.</value>
  </data>
  <data name="HelpPage_Macro" xml:space="preserve">
    <value>Due to the fact that some speedtech in DOOM Eternal directly benefits from quick inputs, the Freescroll Emulation Macro was designed to emulate the scroll wheel of a freescrolling mouse (e.g. G502) for those that do not own one.

This macro sends scroll inputs, a single direction at a time, to your OS at a frequency of 100hz.
It is included in your DESRU download, and will run in the background whenever DOOM Eternal is in focus.

This is currently allowed for use during speedruns in any situation where you may need it, like Slopeboosting.

If you wish to enable this feature, click the checkbox in the Options section, and bind at least one macro direction to a key.


If you plan on using the macro for jump inputs, you will need to use a console command to bind jump to your scroll wheel.
These are the two commands for doing that:
bind mwheeldown _jump
bind mwheelup _jump
Press the Tilde (~) key in DOOM Eternal and type or paste in one or both of those commands.
Normally console commands are not allowed, but these are some of the very few exceptions.</value>
  </data>
  <data name="HelpPage_Options" xml:space="preserve">
    <value>In the bottom left of the DESRU window, there's a section with a few miscellaneous options.

You can enable/disable the macro and hotkeys from here, instead of removing binds.
You can specify your desired maximum FPS that DOOM Eternal will run at.
You can toggle the On-Screen Display here, but make sure it is enabled during speedruns, otherwise your run won't be valid for leaderboard submission. If the OSD takes too much space on your screen, you can enable the Minimal OSD option so the info is shown on a single line.
You can also disable the max FPS limiter here. Hotkeys will still work, and you will need to limit your FPS to 250 or lower through external means, like through RTSS or NVIDIA Control Panel.

Under the CVAR section, you'll find three checkboxes which will toggle various in-game variables.
The first will toggle anti-aliasing. This can help boost your performance if needed.
(note: this option does nothing if you have DLSS enabled)
The second will toggle the forced delay before you're able to quit out of an Ultra-Nightmare run.
And the third, if enabled, will cause load screens to automatically continue, so you don't need to press any button.

There's also a button to toggle a firewall rule blocking DOOM Eternal from accessing the internet. This is to prevent the download of server side balance patches, which can affect the single player campaign.
This firewall rule is REQUIRED to exist during speedruns, so make sure the Info Panel shows "Blocked."

The other button will enable cheats, allowing you to use basically any dev console command in game, along with adding other features like noclip/notarget/enemySpawning.
Clicking this button will place the meath00k mod (XINPUT1_3.dll) in your DOOM Eternal folder. If this is done while the game is running, it will require a restart to take effect.
This should go without saying, but having cheats enabled is NOT allowed during speedruns.</value>
  </data>
  <data name="HelpPage_OSD" xml:space="preserve">
    <value>While DESRU is running, the performance metrics display in the top right of DOOM Eternal will be modified to display the state of a few things.
This is here to help with the moderation of leaderboard submitted speedruns.

If DESRU is detected to be out of date, an asterisk (*) will be displayed next to the FPS counter. DESRU is required to be up to date during speedruns.

Under the FPS counter, the version of the game will be displayed, along with a few flags.
These flags are:
M - Freescroll Macro Enabled
F - Firewall Rule Enabled
R - ReShade Detected
S - Slopeboosting disabled
L - Max FPS Limiter Disabled

Finally, under the version, "CHEATS ENABLED" will show if meath00k is detected. If you see "RESTART GAME" here at any point, you need to restart DOOM Eternal in order for runs to be legal. DESRU must be running first before DOOM Eternal is launched, and if the trainer is ever detected, you'll need to restart your game for that, too.

On the same line, you'll also see some numbers pop up sometimes. This is your scroll pattern.
The numbers show how many times you scrolled your mouse wheel in a single scroll, and the average time between each input.</value>
  </data>
  <data name="HelpPage_ResScaling" xml:space="preserve">
    <value>Under the Keybinds section, you'll find some options for unlocking the resolution scaling in DOOM Eternal.

By default, DOOM Eternal only allows the dynamic resolution scaling to scale down to a minimum of 50% of your selected resolution. DESRU can unlock this, allowing a minimum scale of as low as 1%.

In order to unlock your resolution scaling, when DOOM Eternal is open you'll need to click the Unlock button, or have the "Unlock on Startup" checkbox checked when starting the game. After a few seconds of the game being in focus, DESRU will automatically set DOOM Eternal to windowed mode, then back to fullscreen. This is to ensure the unlock takes effect.

After scaling is unlocked, you can also set your own minimum scale. You can also automatically enable dynamic scaling with any FPS target up to 1000, though keep in mind that this change won't be shown in the settings menu.

The Res. Scale Hotkey in the Keybinds section will toggle dynamic scaling on and off.</value>
  </data>
  <data name="HelpPage_Trainer" xml:space="preserve">
    <value>DESRU also includes a Trainer that'll read and display the slayer's position and velocity.

In order to use the Trainer, you must have cheats enabled first.

Your position and velocity will be displayed in DESRU, but you can also enable an option to show this info in-game, in place of the normal DESRU OSD.

There is also an optional visual speedometer included that you can use, and can even capture separately to show in recordings.
The top number of this speedometer is your horizontal velocity.
The bottom number will show your total velocity by default, but can be changed to show vertical velocity, or hidden all together.

If total velocity is shown, the background of that number will scale and change color depending on the current speed.
This size and color indicates the difference between the total velocity and the bhop speedcap of 38.5 m/s.
If the bar is green, your total velocity is at or below the speedcap, with the size of the bar scaling based on that percentage.
If your total velocity exceeds the bhop speedcap, the bar will change color depending on how high above the speedcap you are. Starts at green, turns to orange, then eventually red. This color roughly indicates how much delay there will be before you can bhop after landing.

If you wish to capture this speedometer with OBS, a Color Key filter is recommended.
Set the Key Color Type to "Custom Color", with a color #2d2d2d. Set both the Similarity and Smoothness to the minimum value of 1, and you should be good to go.</value>
  </data>
  <data name="HelpPage_VersionChanger" xml:space="preserve">
    <value>To the right of the resolution scaling section are some options to change the version of DOOM Eternal you have currently loaded.

DESRU requires a specific folder structure for this feature to work.
The name of a folder, besides the main one, should be "DOOMEternal &lt;version&gt;". A list of valid version names can be found in the "validVersions.txt" file.
Your folder structure should then look something like the picture below.

Once it's set up, click the Refresh button in DESRU, or restart DESRU.
Changing versions is as simple as selecting one in the drop down then clicking the change version button when DOOM Eternal is closed.

Version 3.1 has a known crash that sometimes happens if you don't delete your current profile.bin file. If this crash affects you, enable the checkbox and DESRU will automatically replace your profile.bin when changing to/from 3.1.
If you already have a profile.bin file you use for 3.1, place it next to your normal one in your saves folder. This file must be named "3.1.bin" for it to be detected.
If 3.1 is your current version, you can also do the same with your main profile.bin, but name it "main.bin".</value>
  </data>
  <data name="offsets" type="System.Resources.ResXFileRef, System.Windows.Forms">
    <value>..\Resources\offsets.json;System.Byte[], mscorlib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </data>
</root>